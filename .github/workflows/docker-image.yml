name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ca-central-1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Create .env file
      run: |
        echo "FRONTEND_ALB_DNS=${{ secrets.FRONTEND_ALB_DNS }}" >> .env
        echo "BACKEND_ALB_DNS=${{ secrets.BACKEND_ALB_DNS }}" >> .env
        echo "BACKEND_PORT=${{ secrets.BACKEND_PORT }}" >> .env
        echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" >> .env
        echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
        echo "CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }}" >> .env
        echo "CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}" >> .env
        echo "CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}" >> .env
        echo "UPSTASH_REDIS_URL=${{ secrets.UPSTASH_REDIS_URL }}" >> .env

    - name: Build, tag, and push Docker images
      env:
        AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        REGION: ca-central-1
        FRONTEND_REPO: irene-frontend
        BACKEND_REPO: irene-backend
      run: |
        IMAGE_TAG=$(git rev-parse --short HEAD)

        FRONTEND_URI=$AWS_ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$FRONTEND_REPO
        BACKEND_URI=$AWS_ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$BACKEND_REPO

        docker-compose build

        docker tag blynk-frontend:latest $FRONTEND_URI:$IMAGE_TAG
        docker tag blynk-backend:latest $BACKEND_URI:$IMAGE_TAG

        docker push $FRONTEND_URI:$IMAGE_TAG
        docker push $BACKEND_URI:$IMAGE_TAG
